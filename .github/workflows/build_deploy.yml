name: Build and Deploy
concurrency: deploy-${{ github.repository }}-${{ github.workflow }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f aws_requirements.txt ]; then pip install -t src/vendor -r aws_requirements.txt ; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude "src/vendor/*"
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --statistics --exclude "src/vendor/*"
      - uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: ./src
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [ build ]
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ./src
      - uses: actions/setup-node@v2
        with:
          node-version: 16
        #install serverless
      - name: Install Serverless Framework
        run: npm install -g serverless
        # authentication
        #serverless deploy
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::344268766757:role/personal-dev-cd-nonprod
          aws-region: us-east-1
          role-session-name: "${{ github.actor }}"
      # deploy serverless
      - name: Deploy serverless
        run: |
          serverless deploy --stage staging
  deploy-prod:
    runs-on: ubuntu-latest
    if: ${{ contains(join(needs.*.result, ','), 'success') }}
    needs: [ deploy-staging ]
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ./src
      - uses: actions/setup-node@v2
        with:
          node-version: 16
        #install serverless
      - name: Install Serverless Framework
        run: npm install -g serverless
        # authentication
        #serverless deploy
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::344268766757:role/personal-dev-cd-prod
          aws-region: us-east-1
          role-session-name: "${{ github.actor }}"
      # deploy serverless
      - name: Deploy serverless
        run: |
          serverless deploy --stage prod
